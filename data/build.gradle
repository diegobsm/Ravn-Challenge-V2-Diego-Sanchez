plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("com.apollographql.apollo").version("2.5.2")
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

apollo {
    // instruct the compiler to generate Kotlin models
    schemaFile = file("src/main/java/com/ravn/network/remote/graphql/schema.json")
    generateKotlinModels.set(true)
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Libs:
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Module Dependencies:
    implementation project(":core")

    // Common:
    implementation rootProject.ext.common.kotlin_stdlib_jdk7
    implementation rootProject.ext.common.core_ktlx

    // Third party
    implementation rootProject.google.gson

    implementation rootProject.ext.apollo.apollo_runtime
    // Coroutines extensions for easier asynchronicity handling
    implementation rootProject.ext.apollo.apollo_coroutine

    implementation rootProject.ext.retrofit.retrofit
    implementation rootProject.ext.retrofit.converter_gson

    // Room:
    implementation rootProject.ext.room.room_runtime
    kapt rootProject.ext.room.room_compiler
    implementation rootProject.ext.room.room_ktx

    // Di:
    implementation rootProject.ext.koin.koin

    // Unit Testing:
    testImplementation rootProject.ext.testCommon.junit
    testImplementation rootProject.ext.testCommon.mockito_core
    testImplementation rootProject.ext.testCommon.mockito_kotlin
    testImplementation rootProject.ext.testCommon.mockito_inline
    testImplementation rootProject.ext.testCommon.core_testing
    testImplementation rootProject.ext.testCommon.test_coroutines
    testImplementation rootProject.ext.testCommon.test_core
    testImplementation rootProject.ext.testCommon.robolectric
    testImplementation rootProject.ext.testCommon.mockwebserver
}